import { Theme } from '@theme-ui/css';

const theme = (function () {
  const customTheme = {
    config: {
      initialColorModeName: 'dark',
      printColorModeName: 'light',
      useBorderBox: true,
      useColorSchemeMediaQuery: false,
    },
    breakpoints: ['480px', '768px', '960px', '1280px'],
    fonts: {
      body: '"DM Sans", system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", sans-serif',
      heading:
        '"DM Sans", system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", sans-serif',
      monospace:
        '"DM Sans", system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", sans-serif',
    },
    fontSizes: [12, 16, 20, 28, 40, 48, 60],
    fontWeights: {
      regular: 400,
      medium: 500,
      bold: 700,
    },
    lineHeights: ['20px', '24px', '28px', '32px', '48px', '56px', '72px'],
    text: {
      default: { fontFamily: 'body', fontWeight: 'regular', fontSize: 1, lineHeight: 1 },
      caps: { fontFamily: 'body', fontWeight: 'regular', fontSize: 0, lineHeight: 0, textTransform: 'uppercase' },
      heading: { fontFamily: 'heading', fontWeight: 'bold', fontSize: 2, lineHeight: 2 },
      subtitle: {
        variant: 'text.caps',
        textTransform: 'uppercase',
        fontWeight: 'bold',
      },
      caps100: {
        variant: 'text.caps',
        textTransform: 'none',
      },
      caps200: {
        variant: 'text.caps',
        fontWeight: 'medium',
        textTransform: 'none',
      },
      caps300: {
        variant: 'text.caps',
        fontWeight: 'bold',
        textTransform: 'none',
      },
      body100: {
        variant: 'text.default',
      },
      body200: {
        variant: 'text.default',
        fontWeight: 'medium',
      },
      body300: {
        variant: 'text.default',
        fontWeight: 'bold',
      },
    },
    colors: {
      text: '#FFFFFF', // white.400
      background: '#27273B', // dark.400

      blue: {
        transparent: 'rgba(132, 179, 255, 0.3)',
        '100': '#F2F7FF',
        '200': '#CCDFFF',
        '300': '#92B0FF',
        '400': '#6E7BF3',
        '500': '#4859AF',
      },
      red: {
        '100': '#FFF0F3',
        '200': '#FD8383',
        '300': '#E72C43',
        '400': '#B30038',
      },
      yellow: {
        gradient_1: 'linear-gradient(#FFDE1F, #ECB902)',
        '100': '#FFFCE0',
        '200': '#FFF9C2',
        '300': '#FFDA00',
        '400': '#F1C218',
      },
      green: {
        transparent: 'rgba(100, 241, 226, 0.3)',
        '100': '#E7FFFC',
        '200': '#66ECCC',
        '300': '#00B388',
        '400': '#005B52',
      },
      orange: {
        '100': '#FFEDDD',
        '200': '#F7A75E',
        '300': '#F18C2F',
        '400': '#D9761B',
      },
      dark: {
        transparent: 'rgba(101, 104, 128, 0.3)',
        '100': '#9C9CB2',
        '200': '#6C708E',
        '300': '#404058',
        '400': '#27273B',
        '500': '#1D1D2D',
      },
      white: {
        '100': 'rgba(255, 255, 255, 0.2)',
        '200': 'rgba(255, 255, 255, 0.4)',
        '300': 'rgba(255, 255, 255, 0.8)',
        '400': '#FFFFFF',
      },
    },
    radii: {
      none: 0,
      sm: 2,
      base: 4,
      md: 6,
      lg: 8,
      xl: 12,
      '2xl': 16,
      '3xl': 24,
      circle: 9999,
    },
    shadows: {
      outline: '0 0 0 3px rgba(255, 255, 255, 0.4)',
      light: '0px 4px 30px rgba(82, 82, 140, 0.2)',
      strong: '0px 8px 70px rgba(69, 63, 139, 0.45)',
      card: '8px 8px 0px rgba(38, 38, 38, 1)',
    },
    buttons: {
      primary: {
        variant: 'styles.button',
        backgroundColor: 'yellow.300',
        color: 'dark.500',
        '&:not(:disabled):hover': { backgroundColor: 'yellow.400' },
        '&:focus': { boxShadow: 'outline' },
        '&:active': { backgroundImage: 'yellow.gradient_1' },
        '&:disabled,&[disabled]': {
          cursor: 'not-allowed',
          backgroundColor: 'dark.transparent',
          color: 'dark.200',
        },
      },
      secondary: {
        variant: 'styles.button',
        backgroundColor: 'transparent',
        border: '1px solid',
        borderColor: 'white.300',
        color: 'white.400',
        '&:not(:disabled):hover': { backgroundColor: 'dark.400' },
        '&:focus': { boxShadow: 'outline' },
        '&:active': { backgroundColor: 'dark.300' },
        '&:disabled,&[disabled]': {
          cursor: 'not-allowed',
          borderColor: 'white.100',
          color: 'white.200',
        },
      },
      error: {
        variant: 'styles.button',
        backgroundColor: 'red.300',
        color: 'white.400',
        '&:not(:disabled):hover': { backgroundColor: 'red.400' },
        '&:focus': { boxShadow: 'outline' },
        '&:active': { backgroundColor: 'red.500' },
        '&:disabled,&[disabled]': {
          cursor: 'not-allowed',
          backgroundColor: 'dark.transparent',
          color: 'white.300',
        },
      },
      ghost: {
        variant: 'styles.button',
        backgroundColor: 'transparent',
        color: 'white.400',
        '&:not(:disabled):hover': { backgroundColor: 'dark.400' },
        '&:focus': { boxShadow: 'outline' },
        '&:active': { backgroundColor: 'dark.300' },
        '&:disabled,&[disabled]': {
          cursor: 'not-allowed',
          backgroundColor: 'transparent',
          color: 'white.200',
        },
      },
      link: {
        variant: 'styles.button',
        paddingX: 0,
        height: 'initial',
        backgroundColor: 'transparent',
        color: 'blue.300',
        '&:not(:disabled):hover': { backgroundColor: 'white.100' },
        '&:focus': { boxShadow: 'outline' },
        '&:active': { backgroundColor: 'white.200' },
        '&:disabled,&[disabled]': {
          cursor: 'not-allowed',
          color: 'white.200',
        },
      },
      'small-primary': {
        variant: 'buttons.primary',
        height: 40,
        paddingX: 16,
        backgroundColor: 'blue.300',
        fontSize: 0,
        '&>svg': {
          height: 16,
          width: 16,
        },
        '&:not(:disabled):hover': { backgroundColor: 'blue.400', color: 'white.400' },
        '&:active': { backgroundColor: 'blue.500', color: 'white.400' },
      },
      'small-secondary': {
        variant: 'buttons.secondary',
        height: 40,
        paddingX: 16,
        fontSize: 0,
        '&>svg': {
          height: 16,
          width: 16,
        },
      },
      'small-error': {
        variant: 'buttons.error',
        px: 16,
        height: 40,
        fontSize: 0,
        '&>svg': {
          height: 16,
          width: 16,
        },
      },
      'small-ghost': {
        variant: 'buttons.ghost',
        height: 40,
        paddingX: 16,
        fontSize: 0,
        '&>svg': {
          height: 16,
          width: 16,
        },
      },
      'small-link': {
        variant: 'buttons.link',
        fontSize: 0,
        fontWeight: 'medium',
        '&>svg': {
          height: 16,
          width: 16,
        },
      },
      'extra-small-primary': {
        variant: 'buttons.small-primary',
        height: 28,
        paddingX: 12,
      },
      icon: {
        px: 0,
        py: 0,
        height: 28,
        width: 28,
        backgroundColor: 'transparent',
        color: 'blue.300',
        transition: 'all 0.2s ease',
        outline: 'none',
        cursor: 'pointer',
        '&>svg': {
          height: 28,
          width: 28,
          path: {
            color: 'currentcolor',
          },
        },
        '&:hover': { backgroundColor: 'white.100' },
        '&:focus': { boxShadow: 'outline' },
        '&:active': { backgroundColor: 'white.200' },
        '&:disabled,&[disabled]': {
          cursor: 'not-allowed',
          backgroundColor: 'transparent',
          color: 'white.200',
        },
      },
      'small-icon': {
        variant: 'buttons.icon',
        height: 20,
        width: 20,
        '&>svg': {
          height: 20,
          width: 20,
          path: {
            color: 'currentcolor',
          },
        },
      },
      tab: {
        variant: 'buttons.small-ghost',
        borderRadius: 0,
        color: 'white.300',
        boxShadow: '0px 2px #2D2D2D',
        fontSize: 1,
        '&.active': {
          boxShadow: '0px 2px #FFDA00',
          color: 'yellow.300',
        },
      },
    },
    forms: {
      switch: {
        height: 24,
        width: 40,
        backgroundColor: 'rgba(92, 92, 92, 0.3)',
        display: 'flex',
        padding: '4px !important',
        '&>div': {
          height: 16,
          width: 16,
          backgroundColor: 'dark.300',
        },
        'input:checked ~ &': {
          backgroundColor: 'blue.400',
          '&>div': {
            backgroundColor: 'white.400',
          },
        },
      },
      checkbox: {
        'input:checked ~ &': { color: 'blue.300' },
        'input:focus ~ &': { boxShadow: 'outline' },
      },
      input: {
        flex: 1,
        minHeight: 24,
        fontFamily: 'body',
        fontSize: 1,
        fontWeight: 'regular',
        color: 'white.400',
        border: 'none',
        padding: '4px 12px 4px 12px !important',
        margin: '0 !important',
        outline: 'none',
        '--theme-ui-input-autofill-bg': 'transparent',
        '::placeholder': {
          fontFamily: 'body',
          fontSize: 1,
          fontWeight: 'regular',
          color: 'white.100',
        },
      },
    },
    styles: {
      root: {
        height: '100%',
        '#root': {
          display: 'flex',
          flexDirection: 'column',
          minHeight: '100vh',
          maxWidth: '100%',
          width: '100vw',
          backgroundColor: '#FFFFFF',
        },
        textarea: {
          WebkitAppearance: 'none',
          MozAppearance: 'none',
          appearance: 'none',
        },
        input: {
          WebkitAppearance: 'none',
          MozAppearance: 'none',
          appearance: 'none',
        },
      },
      button: {
        display: 'flex',
        flexShrink: 0,
        height: 56,
        paddingX: 24,
        paddingY: 0,
        fontFamily: 'body',
        fontSize: 1,
        fontWeight: 'bold',
        whiteSpace: 'nowrap',
        borderRadius: 'lg',
        alignItems: 'center',
        justifyContent: 'center',
        transition: 'all 0.2s ease',
        outline: 'none',
        cursor: 'pointer',
        '&>svg': {
          display: 'flex',
          verticalAlign: 'bottom',
          height: 24,
          width: 24,
          path: {
            color: 'currentcolor',
          },
        },
      },
      spinner: {
        color: 'primary',
      },
      hr: { backgroundColor: 'dark.400', margin: 0 },
      h1: { variant: 'text.heading', fontSize: 6, lineHeight: 6 },
      h2: { variant: 'text.heading', fontSize: 5, lineHeight: 5 },
      h3: { variant: 'text.heading', fontSize: 4, lineHeight: 4 },
      h4: { variant: 'text.heading', fontSize: 3, lineHeight: 3 },
      h5: { variant: 'text.heading', fontSize: 2, lineHeight: 2 },
      'form-input': {
        display: 'flex',
        flexDirection: 'column',
        paddingX: 0,
        height: 60,
        border: '1px solid',
        borderColor: 'white.100',
        borderRadius: 'lg',
        pointerEvents: 'auto',
        backgroundColor: 'dark.500',
        '&>label': {
          paddingTop: '4px',
          paddingBottom: '2px',
          paddingX: 12,
          fontFamily: 'body',
          fontSize: 0,
          fontWeight: 'medium',
          lineHeight: 0,
          color: 'white.300',
        },
        '&.disabled': {
          pointerEvents: 'none',
          border: 'none',
          backgroundColor: 'dark.300',
          '&>label': { color: 'white.100' },
        },
        '&.error': { borderColor: 'red.200', '&>label': { color: 'red.200' } },
        '&:not(.error).focused': { borderColor: 'blue.300', '&>label': { color: 'blue.300' } },
        '&:not(.error):hover': { borderColor: 'blue.300', color: 'blue.300', '&>label': { color: 'blue.300' } },
        '&:focus-within': { boxShadow: 'outline' },
      },
      'picker-input': {
        '&.disabled': {
          pointerEvents: 'none',
          border: 'none',
          backgroundColor: 'dark.300',
          '&>label': { color: 'white.100' },
        },
        '&:.focused': { borderColor: 'blue.300', '&>label': { color: 'blue.300' } },
        '&:hover': { borderColor: 'blue.300', '&>label': { color: 'blue.300' } },
        '&:focus-within': { boxShadow: 'outline' },
      },
      row: {
        variant: 'buttons.ghost',
        color: 'white.400',
        textAlign: 'left',
        justifyContent: 'flex-start',
        paddingX: '8px',
        '&:focus': { boxShadow: 'none' },
      },
    },
    modals: {
      backdrop: {
        zIndex: 'backdrop',
        position: 'fixed',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        backgroundColor: 'rgba(14, 14, 14, 0.8)',
      },
      content: {
        display: 'flex',
        flexGrow: 1,
        flexDirection: 'column',
        marginTop: 16,
        justifyContent: 'flex-start',
      },
      footer: {
        display: 'flex',
        marginTop: 24,
        alignItems: 'center',
        justifyContent: 'flex-end',
      },
      title: {
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'flex-start',
        '&>button': {
          position: 'absolute',
          top: 12,
          right: 12,
          height: 32,
          width: 32,
          padding: 0,
          '&>svg': {
            height: 24,
            width: 24,
            color: 'white.100',
          },
        },
      },
      default: {
        position: 'relative',
        backgroundColor: 'dark.400',
        color: 'text',
        display: 'flex',
        flexDirection: 'column',
        padding: 24,
        marginY: 'auto',
        maxWidth: 600,
        zIndex: 'modal',
        boxShadow: 'strong',
        borderRadius: 'lg',
      },
      defaultFullScreen: {
        position: 'relative',
        backgroundColor: 'rgba(29, 29, 45, 0.9)',
        display: 'flex',
        flexDirection: `column`,
        minHeight: '100vh',
        maxHeight: '100vh',
        height: 'fill-available',
        top: 0,
        width: '100vw',
        zIndex: 'modal',
      },
      dialog: {
        varian: 'modals.default',
        padding: 64,
        paddingY: 48,
      },
    },
    zIndices: {
      backdrop: 100,
      modal: 110,
    },
  } as Theme;

  return customTheme;
})();

export type ExactTheme = typeof theme;

export default theme;
